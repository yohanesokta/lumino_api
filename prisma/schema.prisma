// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}


enum Role {
  user
  admin
  mentor
}

model Users {
  id            String @id @default(uuid()) @db.Uuid
  username      String
  user_email    String @unique
  user_password String

  profile_picture_url String @default("")
  bio                 String @default("")
  gender              String @default("")
  organisasi          String @default("")
  location            String @default("")
  birthday            String @default("")

  account_status         Boolean  @default(true)
  social_links           String[] @default([])
  email_verified         Boolean  @default(false)
  mentor_specializations String[] @default([])
  mentor_verived         Boolean  @default(false)
  role                   Role     @default(user)
  auth_token             String[] @default([])
  createAt               DateTime @default(now())
  updateAt               DateTime @updatedAt
}

enum OrderStatus {
  success
  fail
  cancel
  pending
}

model Order {
  id          String      @id @default(uuid()) @db.Uuid
  user_id     String
  product_id  String
  stringOrder String      @default("")
  total_price Int
  status      OrderStatus
  createAt    DateTime    @default(now())
  updateAt    DateTime    @updatedAt
  product     ProductEC   @relation(fields: [product_id], references: [id])
}

model Review {
  id         String   @id @default(uuid()) @db.Uuid
  product_id String
  user_id    String
  rating     Float
  comment    String
  createAt   DateTime @default(now())
  updateAt   DateTime @updatedAt
}

// NEWS PRODUCT

model ProductEC {
  id          String     @id @default(uuid())
  title       String
  image       String
  price       Int
  category    String
  description String
  features    String[]
  rating      Float
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  tools       ToolEC[]
  reviews     ReviewEC[]
  order       Order[]
}

model ToolEC {
  id        String     @id @default(uuid())
  name      String
  icon      String
  productId String?
  product   ProductEC? @relation(fields: [productId], references: [id])

  @@unique([name, productId])
}

model ReviewEC {
  id        String    @id @default(uuid())
  user      String
  comment   String
  rating    Int
  date      DateTime
  productId String
  product   ProductEC @relation(fields: [productId], references: [id])
}

enum InboxType {
  order
  product
  user
}

model Inbox {
  id   String    @id @default(uuid()) @db.Uuid
  type InboxType
  email String
  title String
  message String
  timestamp DateTime @default(now())
  read Boolean @default(false)
}